#!/usr/bin/perl

##################
#
#  Check a Delock Tasmota 11827
#
#  Usage:   ...
#
#  Copyright (C) 2021 Bernd Arnold
#  https://github.com/wopfel/monitoring-plugins
#
##################

use strict;
use warnings;
require LWP::UserAgent;
use JSON;
use Data::Dumper;
use Getopt::Long;

my $opt_verbose;
my $opt_host;

my $answer = "";
my $crit_count = 0;
my $warn_count = 0;
my $status = "Unknown";
my @perfdata = ();


# Process command line options
GetOptions( "h|host=s"           => \$opt_host,
            "v|verbose"          => \$opt_verbose,
            #"help"               => \$opt_help,
          )
or do { print STDERR "Error in command line argument processing.\n"; exit 1; };
#or do { print STDERR "Error in command line argument processing. Try '$0 -help'.\n"; exit 1; };

if ( ! $opt_host ) {
    print STDERR "Error: option -host missing.\n";
    exit 4;
}



my $ua = LWP::UserAgent->new;

my $response = $ua->get( "http://$opt_host/cm?cmnd=Status 0" );

if ( $response->is_success ) {
#     print $response->decoded_content;  # or whatever
}
else {
    print "UNKNOWN: $response->status_line";
    exit 3;
}

print $response->decoded_content if $opt_verbose;

my $response_json = decode_json( $response->decoded_content );

print Dumper( $response_json ) if $opt_verbose;
if ( my $friendlyname = $response_json->{'Status'}->{'FriendlyName'}->[0] ) {
    $answer .= "$friendlyname. "
}

my $powerstatus = $response_json->{'StatusSTS'}->{'POWER'};
if ( $powerstatus ne "ON" ) {
    $crit_count++;
}
$answer .= "Power status: $powerstatus. ";
push @perfdata, sprintf("powerstate=%d", $powerstatus eq "ON" ? 1 : 0)  if  defined $powerstatus;

if ( my $total = $response_json->{'StatusSNS'}->{'ENERGY'}->{'Total'} ) {
    push @perfdata, "total=$total";
}
if ( my $today = $response_json->{'StatusSNS'}->{'ENERGY'}->{'Today'} ) {
    push @perfdata, "today=$today";
    $answer .= "Today $today kWh. ";
}
if ( my $yesterday = $response_json->{'StatusSNS'}->{'ENERGY'}->{'Yesterday'} ) {
    push @perfdata, "yesterday=$yesterday";
}


###

if ( $crit_count ) {
    $status = "Critical";
} elsif ( $warn_count ) {
    $status = "Warning";
} else {
    $status = "Ok";
}

print "$status: ";
print "$answer\n";

print "| " . join(" ", @perfdata) . "\n"  if @perfdata;

exit 2 if $status eq "Critical";
exit 1 if $status eq "Warning";
exit 0 if $status eq "Ok";
exit 3; # 'Unknown' return code
