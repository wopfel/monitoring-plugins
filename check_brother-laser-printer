#!/usr/bin/perl

##################
#
#  Check a Brother Laser Printer
#  Written for: Brother MFC-L3770CDW
#
#  Usage:   ...
#
#  Copyright (C) 2023 Bernd Arnold
#  https://github.com/wopfel/monitoring-plugins
#
##################

use strict;
use warnings;
require LWP::UserAgent;
use Data::Dumper;
use Getopt::Long;

# Sub routines
sub print_help();

my $opt_verbose;
my $opt_host;
my $opt_help;

my $answer = "";
my $crit_count = 0;
my $warn_count = 0;
my $status = "Unknown";
my @perfdata = ();
my @additional = ();


# Process command line options
GetOptions( "h|hostname=s"       => \$opt_host,
            "v|verbose"          => \$opt_verbose,
            "help"               => \$opt_help,
          )
or do { print STDERR "Error in command line argument processing.\n"; exit 1; };
#or do { print STDERR "Error in command line argument processing. Try '$0 -help'.\n"; exit 1; };

if ( ! $opt_host ) {
    print STDERR "Error: option -host missing.\n";
    exit 4;
}

if ( $opt_help ) {
    print_help();
    exit 10;  # Outside of the official monitoring plugin's exit codes
}


my $ua = LWP::UserAgent->new;

my $response = $ua->get( "http://$opt_host/general/information.html" );

if ( $response->is_success ) {
#     print $response->decoded_content;  # or whatever
}
else {
    print "UNKNOWN: " . $response->status_line;
    exit 3;
}

print Dumper( $response->decoded_content ) if $opt_verbose;

#
# Extract data
#

#my ( $page_counter ) = $response->decoded_content =~ m{<h3>Device&#32;Status</h3><dl class="items"><dt>Page&#32;Counter</dt><dd>(\d+)</dd>};
my ( $pages_total, $pages_color, $pages_bw ) = $response->decoded_content =~ m{<h3>Device&#32;Status</h3><dl class="items"><dt>Page&#32;Counter</dt><dd>(\d+)</dd><dt class="subhead"><span>Colour</span></dt><dd>(\d+)</dd><dt class="subhead"><span>B&amp;W</span></dt><dd>(\d+)</dd></dl>};

my ( $paper_jams_total ) = $response->decoded_content =~ m{<dl class="items"><dt>Total&#32;Paper&#32;Jams</dt><dd>(\d+)</dd>};

my ( $toner_cyan, $toner_magenta, $toner_yellow, $toner_black ) = $response->decoded_content =~ m{<dt>Toner&nbsp;Cyan&#32;\(C\)\*\*</dt><dd>(\d+)%</dd><dt>Toner&nbsp;Magenta&#32;\(M\)\*\*</dt><dd>(\d+)%</dd><dt>Toner&nbsp;Yellow&#32;\(Y\)\*\*</dt><dd>(\d+)%</dd><dt>Toner&nbsp;Black&#32;\(BK\)\*\*</dt><dd>(\d+)%</dd>};


for my $toner ( qw/ Cyan Magenta Yellow Black / ) {

    my ( $fill ) = $response->decoded_content =~ m{<dt>Toner&nbsp;$toner&#32;\([CMYB]K?\)\*\*</dt><dd>(\d+)%</dd>};

    print "<<< $toner -> $fill % >>>\n"  if  $opt_verbose;

    if ( $fill < 20 ) {
        $warn_count++;
        push @additional, "[WARNING] Toner $toner $fill %.";
    } else {
        push @additional, "[OK] Toner $toner $fill %.";
    }

}

$answer .= "$pages_total Seiten total. ";

push @perfdata, "paper_jams=$paper_jams_total";
push @perfdata, "total=$pages_total";

push @perfdata, "toner_cyan=$toner_cyan%";
push @perfdata, "toner_magenta=$toner_magenta%";
push @perfdata, "toner_yellow=$toner_yellow%";
push @perfdata, "toner_black=$toner_black%";


###

if ( $crit_count ) {
    $status = "Critical";
} elsif ( $warn_count ) {
    $status = "Warning";
} else {
    $status = "Ok";
}

print "$status: ";
print "$answer\n";

print "| " . join(" ", @perfdata) . "\n"  if @perfdata;
print join("\n", @additional) . "\n"  if @additional;

exit 2 if $status eq "Critical";
exit 1 if $status eq "Warning";
exit 0 if $status eq "Ok";
exit 3; # 'Unknown' return code



#
# Print help
#

sub print_help() {

    print STDERR <<~"END"
    Check Brother laser printer state.

    Usage: $0

    Example: $0
             Warning when toner fill is less than 20 %.

    Parameters:

        -h, --help         Show this help text
        -v, --verbose      Verbose output (for debugging)

    END

}