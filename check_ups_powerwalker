#!/usr/bin/perl

# Erstellt 02.10.2024, Bernd Arnold
# Getestet mit einer Powerwalker VI 1000 CSW

use strict;
use warnings;

my $perfdata = "";
my $errorcount = 0;
my $warningcount = 0;


# Sample output:
#
# # upsc powerwalker
# Init SSL without certificate database
# battery.charge: 100
# battery.voltage: 13.90
# battery.voltage.high: 13.00
# battery.voltage.low: 10.40
# battery.voltage.nominal: 12.0
# device.model: 1000VA
# device.type: ups
# driver.name: nutdrv_qx
# driver.parameter.pollfreq: 30
# driver.parameter.pollinterval: 2
# driver.parameter.port: auto
# driver.parameter.synchronous: auto
# driver.version: 2.8.0
# driver.version.data: Mustek 0.07
# driver.version.internal: 0.32
# driver.version.usb: libusb-1.0.26 (API: 0x1000109)
# input.current.nominal: 4.0
# input.frequency: 50.0
# input.frequency.nominal: 50
# input.voltage: 231.0
# input.voltage.fault: 225.9
# input.voltage.nominal: 230
# output.voltage: 231.0
# ups.beeper.status: enabled
# ups.delay.shutdown: 30
# ups.delay.start: 180
# ups.load: 14
# ups.productid: 5161
# ups.status: OL
# ups.type: offline / line interactive
# ups.vendorid: 0665


my @output = `upsc powerwalker 2>&1`;

if ( $? != 0 ) {
        print "Error when calling upsc process.\n";
        exit 3;
}

my %upsdata;

for my $line ( @output ) {

        chomp $line;
        next if $line =~ /Init SSL without certificate database/;

        my ( $item, $value ) = $line =~ /^(.*?) *: (.*?) *$/;
#print "<<<$item>>>\n";
#print "<<<$line>>>";

        $upsdata{ $item } = $value;

}

#print @output;
#print $upsdata{'battery.charge'};


$perfdata .= "inputvoltage=" . $upsdata{'input.voltage'} . " "  if  defined $upsdata{'input.voltage'};
$perfdata .= "batteryvoltage=" . $upsdata{'battery.voltage'} . " "  if  defined $upsdata{'battery.voltage'};
$perfdata .= "upspower=" . $upsdata{'ups.power'} . " "  if  defined $upsdata{'ups.power'};


# battery.charge: 100
if ( defined $upsdata{'battery.charge'} ) {
        my $battcharge_pct = $upsdata{'battery.charge'};

        $perfdata .= "battchargepct=" . $battcharge_pct . " ";
}


# ups.load: 16
if ( defined $upsdata{'ups.load'} ) {
        my $load_pct = $upsdata{'ups.load'};

        $perfdata .= "loadpct=" . $load_pct . " ";
}

# ups.status: OL
# OL On line (no power failure) (opposite of OB - on battery)
# LB Low battery
# RB Replace battery
my $usvstatus = $upsdata{'ups.status'};

if ( $usvstatus ne "OL" ) {
        $errorcount++;
}

print "USV-Status: ";
if ( $usvstatus eq "OL" ) { print "on line ($usvstatus). " }
elsif ( $usvstatus eq "OB" ) { print "on battery ($usvstatus). " }
else { print "$usvstatus. " }

print $upsdata{'battery.charge'} . " % charged. "  if  defined $upsdata{'battery.charge'};

print "| $perfdata"  if  $perfdata;

print "\n";


exit 2  if  $errorcount > 0;
exit 1  if  $warningcount > 0;
exit 0  if  $errorcount + $warningcount == 0;
exit 3;

