#! /usr/bin/perl -w

# check_taskwarrior_version.pl     Copyright (C) 2012 Bernd Arnold
#
# ...
#
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# you should have received a copy of the GNU General Public License
# along with this program (or with Nagios);  if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA

use strict;
use English;
use Getopt::Long;
#use File::stat;
use vars qw($PROGNAME);
use lib "/usr/lib/monitoring-plugins";
use utils qw (%ERRORS &print_revision &support);
require LWP::UserAgent;


sub print_help ();
sub print_usage ();

my ($opt_h, $opt_V);
my ($result, $message, $age, $size, $st);

$PROGNAME="check_taskwarrior_version";

Getopt::Long::Configure('bundling');
GetOptions(
    "V"   => \$opt_V, "version" => \$opt_V,
    "h"   => \$opt_h, "help"    => \$opt_h,
);

if ($opt_V) {
    print_revision($PROGNAME, '##TODO##');
    exit $ERRORS{'OK'};
}

if ($opt_h) {
    print_help();
    exit $ERRORS{'OK'};
}

#####

my $installed_version = `/usr/bin/task --version`;
chomp $installed_version;

# Ausgabe:
# 2.1.1


my $latest_version;

my $ua = LWP::UserAgent->new;
$ua->timeout(10);
 
# Fetching latest version string from web
my $response = $ua->get( 'http://tasktools.org/latest' );
 
if ( ! $response->is_success ) {
    print "CRITICAL: Could not fetch info from web to compare to local version $installed_version.\n";
    exit $ERRORS{UNKNOWN};
} else {
    $latest_version = $response->decoded_content;
    chomp $latest_version;
}

if ( $installed_version eq $latest_version ) {
    print "OK: Installed version $installed_version is up to date.\n";
    exit $ERRORS{OK};
} else {
    print "WARNING: Installed version $installed_version is not latest version $latest_version.\n";
    exit $ERRORS{WARNING};
}

exit $ERRORS{UNKNOWN};





sub print_usage () {
        print "Usage:\n";
        print "  $PROGNAME [-h | --help]\n";
        print "  $PROGNAME [-V | --version]\n";
}

sub print_help () {
        # No official plugin ;-)
        #print_revision($PROGNAME, '##TODO');
        print "Copyright (C) 2012 Bernd Arnold\n\n";
        print_usage();
        print "\n";
        print "  <secs>  File must be no more than this many seconds old (default: warn 240 secs, crit 600)\n";
        print "  <size>  File must be at least this many bytes long (default: crit 0 bytes)\n";
        print "\n";
        # No official plugin ;-)
        #support();
}

